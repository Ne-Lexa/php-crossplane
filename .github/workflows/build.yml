name: build

on:
  - push
  - pull_request

jobs:
  tests:
    name: PHP ${{ matrix.php }} Test on ${{ matrix.os }}

    env:
      extensions: iconv, mbstring, json
      key: cache-v1
      PHPUNIT_COVERAGE: 0
      PHP_INI: date.timezone='UTC', memory_limit=-1, opcache.enable=1, opcache.enable_cli=1

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php:
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          coverage: pcov
          ini-values: ${{ env.PHP_INI }}
          tools: composer:v2, cs2pr

      - name: Determine composer cache directory on Linux or MacOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Determine composer cache directory on Windows
        if: matrix.os == 'windows-latest'
        run: echo "COMPOSER_CACHE_DIR=~\AppData\Local\Composer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: php${{ matrix.php }}-composer-

      - name: Check PHP Version
        run: php -v

      - name: Check Composer Version
        run: composer -V

      - name: Check PHP Extensions
        run: php -m

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies with composer
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run tests with phpunit
        run: vendor/bin/phpunit -c phpunit.dist.php
